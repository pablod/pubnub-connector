/**
 * This file was automatically generated by the Mule Cloud Connector Development Kit
 */
package org.mule.module.pubnub;

import org.mule.tck.FunctionalTestCase;
import org.mule.util.concurrent.Latch;

import java.util.concurrent.atomic.AtomicReference;

import edu.emory.mathcs.backport.java.util.concurrent.TimeUnit;
import org.codehaus.jackson.JsonNode;
import org.codehaus.jackson.map.ObjectMapper;
import org.codehaus.jackson.node.ObjectNode;
import org.junit.Assert;

public class PubnubFunctionalXMLTestCase extends FunctionalTestCase
{
    @Override
    protected String getConfigResources()
    {
        return "pubnub-config.xml";
    }

    public void testPubNubConfig()throws Exception
    {

        final PubnubCloudConnector cc = new PubnubCloudConnector("demo", "demo", "");
        cc.init();

        final AtomicReference<JsonNode> result = new AtomicReference<JsonNode>();
        final Latch latch = new Latch();
        // Callback Interface when a Message is Received
        final MessageListener callback = new MessageListener()
        {
            @Override
            public boolean onMessage(JsonNode message)
            {
                // Print Received Message
                System.out.println("Subscribed Message received: " + message);
                result.set(message);
                latch.release();
                //Stop listening
                return false;
            }
        };
        Thread t = new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                // Listen for Messages (Subscribe)
                cc.subscribe("mule-test-result", callback);
            }
        });

        t.start();

        ObjectNode msg = new ObjectMapper().createObjectNode();
        msg.put("hello", "cloud");

        Thread.sleep(5000);
        cc.publish("mule-test", msg);
        Assert.assertTrue("Message was not received on channel: mule-test-result", latch.await(15, TimeUnit.SECONDS));


    }

}
